import { spawn } from 'cross-spawn';
import { readFileSync } from 'fs';
import { readdir } from 'fs/promises';
import { resolve } from 'path';

const PLUGGA_TECH_PATH = './node_modules/@plugga-tech';

/** Wraps spawn in a promise which resolves when it is closed */
export function spawnProcess(command, args, ignoreExitCode) {
  return new Promise((resolve) => {
    const childProcess = spawn(command, args, { stdio: 'inherit' });
    childProcess.on('exit', (code) => {
      if (code !== 0 && !ignoreExitCode) {
        process.exit(code);
      } else {
        resolve();
      }
    });
  });
}

/** Gets the folder of the npm assignment package */
export async function getAssignmentFolder() {
  return (await readdir(PLUGGA_TECH_PATH, { withFileTypes: true }))
    .filter((dirent) => dirent.isDirectory() && dirent.name !== 'plugga-cli')
    .map((dirent) => dirent)[0];
}

/** Creates a path to a specific sub-folder in the assignment package folder */
export async function getAssignmentSubFolderPath(folderName) {
  const assigmentFolder = await getAssignmentFolder();
  return resolve(PLUGGA_TECH_PATH, assigmentFolder.name, folderName);
}

/** Reads the package.json in the assignment package folder */
export async function readAssigmentPackageJson() {
  const assigmentFolder = await getAssignmentFolder();
  const packageJsonPath = resolve(PLUGGA_TECH_PATH, assigmentFolder.name, 'package.json');
  const data = readFileSync(packageJsonPath);
  return JSON.parse(data);
}
