import { spawnProcess } from './utils.js';

/** Starts the dev server and runs tests with cypress or vitest */
export default async function test(filters, options) {
  const framework = options.vitest ? 'vitest' : options.framework;
  switch (framework) {
    case 'vitest':
      return await testWithVitest(filters, options);
    case 'cypress':
    default:
      return await testWithCypress(filters, options);
  }
}

async function testWithVitest(filters, options) {
  const command = ['vitest'];
  if (options.run) {
    command.push('run');
  }
  command.push('-c', 'tests/vitest.config.' + (options.ts ? 'ts' : 'js'));
  command.push(...filters);

  await spawnProcess('npx', command);
}

async function testWithCypress(filters, options) {
  const command = ['cypress'];
  if (options.run) {
    command.push('run');
    if (filters.length) {
      command.push(...['--spec', filters.map((p) => `"**/*${p}*"`).join(',')]);
    }
  } else {
    command.push(...['open', '--e2e']);
  }
  command.push(...['-b', 'chrome', '-C', 'cypress/cypress.config.' + (options.ts ? 'ts' : 'js')]);
  const start = 'start-server-and-test';
  await spawnProcess('npx', [start, 'dev', 'http://localhost:5173', command.join(' ')]);
}
